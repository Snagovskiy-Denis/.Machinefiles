#!/usr/bin/env bash

# Increas verbosity
alias cp="cp -iv"
alias mv="mv -iv"
alias rm="rm -vI"
alias mkdir="mkdir -pv"
alias dirs="dirs -v"

# Colorize
# alias ls="ls -hN --color=auto --group-directories-first"
alias ls="lsd"
alias grep="grep --color=auto"
alias diff="diff --color=auto"

# Allow sudo before other aliases
alias sudo="sudo "
alias s="sudo "

# Abbreviate long commands
alias py="python"
alias ipy="ipython"
alias r="ranger"
alias tt="taskwarrior-tui"
alias cr="cmus-remote"
alias ka="killall"
alias n="newsboat"
alias p="pacman"
alias a="aura"
alias e="${EDITOR:-nvim}"
alias se="s e"
alias o="xdg-open"
alias f="dmconf"

alias ll="ls -Al"
alias cb="xsel --clipboard"  # if piped copy to clipboard else print cb
alias yt="yt-dlp --add-metadata --ignore-errors --embed-thumbnail --sponsorblock-remove default"  # ffmpeg
alias yta="yt --extract-audio"
alias ytac="cb | yta --batch-file -"  # yta link from clipboard
alias ytc=" cb | yt  --batch-file -"
t ()  { trans "$*"; }
tru () { trans ru:en "$*"; }  # tru instead of tr beacuse of task completion
d ()  { dict "${1}" | less; }

# "New" commands
alias ps\?="ps aux | grep"
alias reload="source ~/.bashrc"
alias pacman_remove_fzf="pacman -Qeq | fzf --multi --preview 'pacman -Qi {1}' | xargs -ro sudo pacman -Rns"
gch() { git switch "$(git branch --all | fzf | tr -d '[:space:]')"; }

# Timer
alias t5=" termdown $(calc  5*60) && mpv ~/Data/Music/alarm.mp3 ; exit"
alias t10="termdown $(calc 10*60) && mpv ~/Data/Music/alarm.mp3 ; exit"
alias t15="termdown $(calc 15*60) && mpv ~/Data/Music/alarm.mp3 ; exit"
tn  ()   { termdown $(calc $1*60) && mpv "${HOME}/Data/Music/alarm.mp3"; }

# Dev stuff
alias ut="python -m unittest"
ft () { python -m unittest "${2:-test}"/"${1:-functional_tests}"/*.py; }
## Print pythons TODOs in comments
alias TODO="grep TODO . -Rn --exclude-dir=lib* --exclude-dir=htmlcov --color=always | sed -r 's/(\:.*\:).*\#/\1/'"
alias vc="python -m venv ./venv"
alias va="source ./venv/bin/activate"
alias vv="vc && va && pip install -r requirements.txt || echo 'error'"
alias pe="poetry run ${EDITOR:-nvim}"
alias pr="poetry run"
alias gs="git status"
alias gd="git diff"

alias no="note -o"
note () {
    help_note="How to use:
        No arguments = print file
        If more then 1 argument = add all arguments to file
        
        If first argument is one of these:
        -h = print this help message
        -o = open note in editor specified by EDITOR
        -c = put\paste clipboard to file
        --clear-file = clear file"
    filepath="${HOME}/.notes.md"

    # if file doesn't exist, create it
    if [[ ! -f $filepath ]]; then
        touch $filepath
    fi

    if ! (($#)); then
        cat $filepath
    elif [[ "$1" == "-h" ]]; then
        printf "${help_note}\n"
    elif [[ "$1" == "--clear-file" ]]; then
        printf "%s" > $filepath
    elif [[ "$1" == "-o" ]]; then
        $EDITOR $filepath
    elif [[ "$1" == "-c" ]]; then
        xsel -b >> $filepath
    else
        printf "%s\n" "$*" >> $filepath
    fi
}

# zd - cd to selected directory
zd() {
  local dir
  dir="$(
    find "${1:-.}" -path '*/\.*' -prune -o -type d -print 2> /dev/null \
      | fzf +m \
          --preview='tree -C {} | head -n $FZF_PREVIEW_LINES' \
          --preview-window='right:hidden:wrap' \
          --bind=ctrl-v:toggle-preview \
          --bind=ctrl-x:toggle-sort \
          --header='(view:ctrl-v) (sort:ctrl-x)' \
  )" || return
  cd "$dir" || return
}

# Errorless experience
alias :q="exit"
alias :Q="exit"
