#!/usr/bin/env bash

# Increas verbosity
alias cp="cp -iv"
alias mv="mv -iv"
alias rm="rm -vI"
alias mkdir="mkdir -pv"
alias dirs="dirs -v"

# Colorize
# alias ls="ls -hN --color=auto --group-directories-first"
alias ls="lsd"
alias grep="grep --color=auto"
alias diff="diff --color=auto"
alias cat="bat"
alias diff="delta"

# Allow sudo before other aliases
alias sudo="sudo "
alias s="sudo "

# Abbreviate long commands
alias py="python"
alias ipy="ipython"
alias r="ranger"
alias tt="taskwarrior-tui"
alias to="taskopen"
alias cr="cmus-remote"
alias ka="killall"
alias n="newsboat"
alias p="pacman"
alias a="aura"
alias e="${EDITOR:-nvim}"
alias se="s e"
alias o="xdg-open"
alias f="dmconf"
alias el="e ${LEDGER_FILE}"
alias ztl="cd ${ZETTELKASTEN}Z"
alias zdb="sqlite3 ${ZETTELKASTEN_DB}"
alias list-lan-clients="sudo arp-scan --localnet"
alias seho="s e /etc/hosts"
alias curr_power="cat /sys/class/power_supply/BAT0/capacity"

alias ll="ls -Al"
alias cb="xsel --clipboard"  # if piped copy to clipboard else print cb
alias yt="yt-dlp --add-metadata --ignore-errors --embed-thumbnail --sponsorblock-remove default"  # ffprob
alias yta="yt --extract-audio"
alias ytac="cb | yta --batch-file -"  # yta link from clipboard
alias ytc=" cb | yt  --batch-file -"
t ()  { trans "$*"; }
tru () { trans ru:en "$*"; }  # tru instead of tr beacuse of task completion
d ()  { dict "${1}" | less; }

# "New" commands
alias ps\?="ps aux | rg"
alias reload="source ~/.bashrc"
alias gotemp='cd $(mktemp -d)'

alias vpn-up="sudo wg-quick up wg0"
alias vpn-down="sudo wg-quick down wg0"
alias vpn-ip="curl --silent https://api.country.is | jq"

# Timer
alias t5=" termdown $(calc  5*60) && mpv ~/Data/Music/alarm.mp3 ; exit"
alias t10="termdown $(calc 10*60) && mpv ~/Data/Music/alarm.mp3 ; exit"
alias t15="termdown $(calc 15*60) && mpv ~/Data/Music/alarm.mp3 ; exit"
tn  ()   { termdown $(calc $1*60) && mpv "${HOME}/Data/Music/alarm.mp3"; }

# Errorless experience
alias :q="exit"
alias :Q="exit"

# Dev stuff
alias ut="python -m unittest"
ft () { python -m unittest "${2:-test}"/"${1:-functional_tests}"/*.py; }
alias par='poetry run python app run'

# Archives staff
alias zip_figma='zip -r figma-$(date -I).zip *'
book-temp () { pwd > "/tmp/$1"; }
cd-book () { cd $(cat "/tmp/$1"); }

# Print TODOs
alias TODO="rg TODO --glob='!*.json' --glob='!*.js*' --glob='!*.css*'"
alias TODO-git='TODO $(git ls-files -m)'
alias TODO.txt="TODO --heading --color=always > TODO.txt"  # writes todo-summary to file

# packaging + environments
alias vc="python -m venv ./venv"
alias va='source ./venv/bin/activate 2>/dev/null|| source $(poetry env info --path)/bin/activate 2>/dev/null || echo no'
alias vv="vc && va && pip install -r requirements.txt"
alias pe='poetry run ${EDITOR:-nvim}'
alias pr="poetry run"
pip-add () { pip install "${1}" && pip freeze | grep "${1}" >> requirements.txt; }  # poetry add like command
alias pytest-pdb="pytest --pdb --pdbcls=IPython.terminal.debugger:TerminalPdb"

alias gs="git status"
alias gd="git diff"
alias gpsu="git log -1 --format=%s | cb"

alias cru="cargo run"
